name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: test_database
        options: --health-cmd="mysqladmin ping --silent" --health-start-period=30s --health-timeout=10s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: mbstring, pdo, bcmath, curl, mysqli
        ini-values: post_max_size=256M, upload_max_filesize=256M
        coverage: none

    - name: Install PHP dependencies
      run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install npm dependencies
      run: npm install

    - name: Build assets with Vite
      run: npm run build

    - name: Move Vite manifest to public/build
      run: |
        if [ ! -d public/build ]; then
          mkdir -p public/build
        fi
        if [ -f public/build/.vite/manifest.json ]; then
          mv public/build/.vite/manifest.json public/build/manifest.json
        fi

    - name: Set APP_KEY
      run: |
        echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env

    - name: Set Vite environment variables
      run: |
        echo "VITE_MANIFEST_PATH=public/build/manifest.json" >> .env

    - name: Set up MySQL environment variables
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=test_database" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=root_password" >> .env

    - name: Run database migrations
      run: php artisan migrate --force

    - name: Clear Laravel caches
      run: php artisan optimize:clear

    - name: Run tests
      run: php artisan test

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/game_blog:latest .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/game_blog:latest
